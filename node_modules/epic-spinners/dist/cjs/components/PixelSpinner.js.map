{"version":3,"file":"PixelSpinner.js","sources":["../../../src/components/PixelSpinner.vue"],"sourcesContent":["<template>\n  <div class=\"pixel-spinner\" :style=\"spinnerStyle\">\n    <div class=\"pixel-spinner-inner\" :style=\"spinnerInnerStyle\" />\n  </div>\n</template>\n\n<script>\nimport utils from '../services/utils'\n\nexport default {\n  name: 'PixelSpinner',\n\n  props: {\n    animationDuration: {\n      type: Number,\n      default: 1500,\n    },\n    size: {\n      type: Number,\n      default: 70,\n    },\n    color: {\n      type: String,\n      default: '#fff',\n    },\n  },\n\n  data() {\n    return {\n      animationName: `pixel-spinner-animation-${Date.now()}`,\n    }\n  },\n\n  computed: {\n    pixelSize() {\n      return this.size / 7\n    },\n\n    spinnerStyle() {\n      return {\n        width: `${this.size}px`,\n        height: `${this.size}px`,\n      }\n    },\n\n    spinnerInnerStyle() {\n      return {\n        animationDuration: `${this.animationDuration}ms`,\n        animationName: this.animationName,\n        width: `${this.pixelSize}px`,\n        height: `${this.pixelSize}px`,\n        backgroundColor: this.color,\n        color: this.color,\n        boxShadow: `\n          ${this.pixelSize * 1.5}px ${this.pixelSize * 1.5}px 0 0,\n          ${this.pixelSize * -1.5}px ${this.pixelSize * -1.5}px 0 0,\n          ${this.pixelSize * 1.5}px ${this.pixelSize * -1.5}px 0 0,\n          ${this.pixelSize * -1.5}px ${this.pixelSize * 1.5}px 0 0,\n          0 ${this.pixelSize * 1.5}px 0 0,\n          ${this.pixelSize * 1.5}px 0 0 0,\n          ${this.pixelSize * -1.5}px 0 0 0,\n          0 ${this.pixelSize * -1.5}px 0 0\n        `,\n      }\n    },\n  },\n\n  watch: {\n    size: {\n      handler: 'updateAnimation',\n      immediate: true,\n    },\n  },\n\n  mounted() {\n    this.updateAnimation()\n  },\n\n  beforeUnmount() {\n    utils.removeKeyframes(this.animationName)\n  },\n\n  methods: {\n    updateAnimation() {\n      utils.removeKeyframes(this.animationName)\n      utils.appendKeyframes(this.animationName, this.generateKeyframes())\n    },\n\n    generateKeyframes() {\n      return `\n        50% {\n          box-shadow:  ${this.pixelSize * 2}px ${this.pixelSize * 2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * 2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * 2}px 0 0,\n                       0 ${this.pixelSize}px 0 0,\n                       ${this.pixelSize}px 0 0 0,\n                       ${this.pixelSize * -1}px 0 0 0,\n                       0 ${this.pixelSize * -1}px 0 0;\n        }\n        75% {\n          box-shadow:  ${this.pixelSize * 2}px ${this.pixelSize * 2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * 2}px ${this.pixelSize * -2}px 0 0,\n                       ${this.pixelSize * -2}px ${this.pixelSize * 2}px 0 0,\n                       0 ${this.pixelSize}px 0 0,\n                       ${this.pixelSize}px 0 0 0,\n                       ${this.pixelSize * -1}px 0 0 0,\n                       0 ${this.pixelSize * -1}px 0 0;\n        }\n        100% {\n          transform: rotate(360deg);\n        }`\n    },\n  },\n}\n</script>\n\n<style lang=\"css\">\n.pixel-spinner,\n.pixel-spinner * {\n  box-sizing: border-box;\n}\n\n.pixel-spinner {\n  height: 70px;\n  width: 70px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.pixel-spinner .pixel-spinner-inner {\n  width: calc(70px / 7);\n  height: calc(70px / 7);\n  background-color: #ff1d5e;\n  color: #ff1d5e;\n  box-shadow: 15px 15px 0 0, -15px -15px 0 0, 15px -15px 0 0, -15px 15px 0 0, 0 15px 0 0, 15px 0 0 0,\n    -15px 0 0 0, 0 -15px 0 0;\n  animation: pixel-spinner-animation 2000ms linear infinite;\n}\n\n/* NOTE Keyframes here serve as reference. They don't do anything. */\n@keyframes pixel-spinner-animation {\n  50% {\n    box-shadow: 20px 20px 0 0, -20px -20px 0 0, 20px -20px 0 0, -20px 20px 0 0, 0 10px 0 0,\n      10px 0 0 0, -10px 0 0 0, 0 -10px 0 0;\n  }\n  75% {\n    box-shadow: 20px 20px 0 0, -20px -20px 0 0, 20px -20px 0 0, -20px 20px 0 0, 0 10px 0 0,\n      10px 0 0 0, -10px 0 0 0, 0 -10px 0 0;\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"],"names":["_sfc_main","utils","_createElementBlock","$options","_createElementVNode"],"mappings":"gHASA,MAAKA,EAAU,CACb,KAAM,eAEN,MAAO,CACL,kBAAmB,CACjB,KAAM,OACN,QAAS,IACV,EACD,KAAM,CACJ,KAAM,OACN,QAAS,EACV,EACD,MAAO,CACL,KAAM,OACN,QAAS,MACV,CACF,EAED,MAAO,CACL,MAAO,CACL,cAAe,2BAA2B,KAAK,IAAK,GACtD,CACD,EAED,SAAU,CACR,WAAY,CACV,OAAO,KAAK,KAAO,CACpB,EAED,cAAe,CACb,MAAO,CACL,MAAO,GAAG,KAAK,SACf,OAAQ,GAAG,KAAK,QAClB,CACD,EAED,mBAAoB,CAClB,MAAO,CACL,kBAAmB,GAAG,KAAK,sBAC3B,cAAe,KAAK,cACpB,MAAO,GAAG,KAAK,cACf,OAAQ,GAAG,KAAK,cAChB,gBAAiB,KAAK,MACtB,MAAO,KAAK,MACZ,UAAW;AAAA,YACP,KAAK,UAAY,SAAS,KAAK,UAAY;AAAA,YAC3C,KAAK,UAAY,UAAU,KAAK,UAAY;AAAA,YAC5C,KAAK,UAAY,SAAS,KAAK,UAAY;AAAA,YAC3C,KAAK,UAAY,UAAU,KAAK,UAAY;AAAA,cAC1C,KAAK,UAAY;AAAA,YACnB,KAAK,UAAY;AAAA,YACjB,KAAK,UAAY;AAAA,cACf,KAAK,UAAY;AAAA,SAEzB,CACD,CACF,EAED,MAAO,CACL,KAAM,CACJ,QAAS,kBACT,UAAW,EACZ,CACF,EAED,SAAU,CACR,KAAK,gBAAgB,CACtB,EAED,eAAgB,CACdC,QAAM,gBAAgB,KAAK,aAAa,CACzC,EAED,QAAS,CACP,iBAAkB,CAChBA,QAAM,gBAAgB,KAAK,aAAa,EACxCA,EAAK,MAAC,gBAAgB,KAAK,cAAe,KAAK,kBAAiB,CAAE,CACnE,EAED,mBAAoB,CAClB,MAAO;AAAA;AAAA,yBAEY,KAAK,UAAY,OAAO,KAAK,UAAY;AAAA,yBACzC,KAAK,UAAY,QAAQ,KAAK,UAAY;AAAA,yBAC1C,KAAK,UAAY,OAAO,KAAK,UAAY;AAAA,yBACzC,KAAK,UAAY,QAAQ,KAAK,UAAY;AAAA,2BACxC,KAAK;AAAA,yBACP,KAAK;AAAA,yBACL,KAAK,UAAY;AAAA,2BACf,KAAK,UAAY;AAAA;AAAA;AAAA,yBAGnB,KAAK,UAAY,OAAO,KAAK,UAAY;AAAA,yBACzC,KAAK,UAAY,QAAQ,KAAK,UAAY;AAAA,yBAC1C,KAAK,UAAY,OAAO,KAAK,UAAY;AAAA,yBACzC,KAAK,UAAY,QAAQ,KAAK,UAAY;AAAA,2BACxC,KAAK;AAAA,yBACP,KAAK;AAAA,yBACL,KAAK,UAAY;AAAA,2BACf,KAAK,UAAY;AAAA;AAAA;AAAA;AAAA,UAKvC,CACF,CACH,+CAlHEC,EAEM,mBAAA,MAAA,CAFD,MAAM,gBAAiB,uBAAOC,EAAY,YAAA,IAC7CC,EAAAA,mBAA8D,MAAA,CAAzD,MAAM,sBAAuB,uBAAOD,EAAiB,iBAAA"}