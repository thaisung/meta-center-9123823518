import "./chunk-RSJERJUL.js";

// node_modules/v-scroll-lock/dist/v-scroll-lock.esm.js
function e(e2) {
  return function(e3) {
    if (Array.isArray(e3)) {
      for (var t2 = 0, o = new Array(e3.length); t2 < e3.length; t2++)
        o[t2] = e3[t2];
      return o;
    }
  }(e2) || function(e3) {
    if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3))
      return Array.from(e3);
  }(e2) || function() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }();
}
var t = false;
if ("undefined" != typeof window) {
  o = { get passive() {
    t = true;
  } };
  window.addEventListener("testPassive", null, o), window.removeEventListener("testPassive", null, o);
}
var o;
var n;
var i;
var r = "undefined" != typeof window && window.navigator && window.navigator.platform && /iP(ad|hone|od)/.test(window.navigator.platform);
var l = [];
var d = false;
var c = -1;
var s = function(e2) {
  return l.some(function(t2) {
    return !(!t2.options.allowTouchMove || !t2.options.allowTouchMove(e2));
  });
};
var a = function(e2) {
  var t2 = e2 || window.event;
  return !!s(t2.target) || (t2.touches.length > 1 || (t2.preventDefault && t2.preventDefault(), false));
};
var u = { enableBodyScroll: function(e2) {
  if (r) {
    if (!e2)
      return void console.error("enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.");
    e2.ontouchstart = null, e2.ontouchmove = null, l = l.filter(function(t2) {
      return t2.targetElement !== e2;
    }), d && 0 === l.length && (document.removeEventListener("touchmove", a, t ? { passive: false } : void 0), d = false);
  } else
    (l = l.filter(function(t2) {
      return t2.targetElement !== e2;
    })).length || setTimeout(function() {
      void 0 !== i && (document.body.style.paddingRight = i, i = void 0), void 0 !== n && (document.body.style.overflow = n, n = void 0);
    });
}, disableBodyScroll: function(o, u2) {
  if (r) {
    if (!o)
      return void console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.");
    if (o && !l.some(function(e2) {
      return e2.targetElement === o;
    })) {
      var v = { targetElement: o, options: u2 || {} };
      l = [].concat(e(l), [v]), o.ontouchstart = function(e2) {
        1 === e2.targetTouches.length && (c = e2.targetTouches[0].clientY);
      }, o.ontouchmove = function(e2) {
        1 === e2.targetTouches.length && function(e3, t2) {
          var o2 = e3.targetTouches[0].clientY - c;
          !s(e3.target) && (t2 && 0 === t2.scrollTop && o2 > 0 ? a(e3) : function(e4) {
            return !!e4 && e4.scrollHeight - e4.scrollTop <= e4.clientHeight;
          }(t2) && o2 < 0 ? a(e3) : e3.stopPropagation());
        }(e2, o);
      }, d || (document.addEventListener("touchmove", a, t ? { passive: false } : void 0), d = true);
    }
  } else {
    !function(e2) {
      setTimeout(function() {
        if (void 0 === i) {
          var t2 = !!e2 && true === e2.reserveScrollBarGap, o2 = window.innerWidth - document.documentElement.clientWidth;
          t2 && o2 > 0 && (i = document.body.style.paddingRight, document.body.style.paddingRight = "".concat(o2, "px"));
        }
        void 0 === n && (n = document.body.style.overflow, document.body.style.overflow = "hidden");
      });
    }(u2);
    var f = { targetElement: o, options: u2 || {} };
    l = [].concat(e(l), [f]);
  }
}, install: function(e2, t2) {
  if (t2) {
    var o = t2.enableBodyScroll, n2 = t2.disableBodyScroll, i2 = t2.bodyScrollOptions;
    o && (this.enableBodyScroll = o), n2 && (this.disableBodyScroll = n2), i2 && (this.bodyScrollOptions = i2);
  }
  e2.directive("scroll-lock", { inserted: this.inserted.bind(this), componentUpdated: this.componentUpdated.bind(this), unbind: this.unbind.bind(this) });
}, inserted: function(e2, t2) {
  t2.value && this.disableBodyScroll(e2, this.bodyScrollOptions);
}, componentUpdated: function(e2, t2) {
  t2.value ? this.disableBodyScroll(e2, this.bodyScrollOptions) : this.enableBodyScroll(e2);
}, unbind: function(e2) {
  this.enableBodyScroll(e2);
} };
"undefined" != typeof window && window.Vue && window.Vue.use(u);
var v_scroll_lock_esm_default = u;
export {
  v_scroll_lock_esm_default as default
};
//# sourceMappingURL=v-scroll-lock.js.map
